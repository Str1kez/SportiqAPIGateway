worker_processes 1;

events {
  worker_connections 1024;
}

env KDS_DB_URL;
env KDS_DB_PORT;

http {
  lua_package_path "$prefix/lua/?.ljbc;$prefix/lua/?.lua;;";
  resolver 127.0.0.11;  # for dns redis
  
  init_by_lua_block {
    require "key"
    require "cjson"
    require "responses"
  }

  server {
    listen 8080;
    default_type application/json;
    location / {
      content_by_lua_block {
        local key_db = require "key".new()
        local secret_key, err = key_db:get_secret()
        local cjson = require "cjson"
        if secret_key == "" or secret_key == nil then
          require "responses".kds_error(err)
          return
        end
        ngx.say(cjson.encode({
          secret_key = secret_key
        }))
      }
    }
  }
}
